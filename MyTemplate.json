{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"C++template" :{
		"prefix": "lonewolfkj",
		"body": [
			"#include<bits/stdc++.h>",
			"using namespace std;",
			"using namespace std::chrono; ",
			" ",
			"typedef long long int ll;",
			"#define endl \"\\n\" ",
			"#define mp make_pair",
			"#define pb push_back",
			"#define all(v) v.begin(),v.end()",
			"#define rall(v) v.rbegin(),v.rend()",
			"#define MOD 1000000007",
			" ",
			"vector<int> sieve(ll n){",
			"   vector<int> prime(n+1,0);",
			"   vector<int> primes(n+1,0);",
			"   int index=0;",
			"   for(int i=2;i<=n;i++){",
			"       if(prime[i]==0){",
			"           prime[i]=i;",
			"           primes[index]=i;",
			"           index++;",
			"       }",
			"       for(int j=0;j<index && primes[j]<=prime[i] && i*primes[j]<=n; j++){",
			"           prime[primes[j]*i] = primes[j];",
			"           if (i % primes[j] == 0) break;",
			"       }",
			"   }",
			"   return prime;",
			"}",
			" ",
			"template <typename T>",
			"ostream& operator<< (ostream& out, const vector<T>& v) {",
  			"   if ( !v.empty() ) {",
			"       copy (v.begin(), v.end(), ostream_iterator<T>(out, \" \"));",
    		"       out << \"\\n\";",
  			"   }",
  			"   return out;",
			"}",
			" ",
			"ll power(ll a, ll n) {",
			"    ll p = 1;",
			"    while (n > 0) {",
			"       if(n%2) {",
			"          p = p * a;",
			"       } n >>= 1; a *= a;",
			"    }",
			"    return p;",
			"}",
			" ",
			"ll powermodulo(ll a, ll n, ll mod) {",
			"ll p = 1;",
			"while (n > 0) {",
			"       if(n%2) {",
			"         p = p * a; p %= mod;",
			"       } n >>= 1;",
			"         a *= a; a %= mod;",
			"    } ",
			"    return p % mod;",
			"}",
			" ",
			"int main(){",
			" ",
			"    ios_base::sync_with_stdio(false);",
			"    cin.tie(NULL);",
			"    cout.tie(NULL);",
			"    #ifndef ONLINE_JUDGE",
			"    auto start = high_resolution_clock::now(); ",
			"    freopen(\"in.txt\", \"rt\", stdin);",
			"    freopen(\"out.txt\", \"wt\", stdout);",
			"    #endif",
			"    //int t; cin >> t; while(t--){}",
			"    $0",
			"    #ifndef ONLINE_JUDGE",
			"    auto stop = high_resolution_clock::now(); ",
			"    auto duration = duration_cast<milliseconds>(stop - start); ",
            "    cout << \"Time Elapsed : \" << duration.count() << \" \";",
			"    #endif",
			" ",
			"}"
		],
		"description": "my c++ template"
	}
}